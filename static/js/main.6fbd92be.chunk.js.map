{"version":3,"sources":["components/UserList.jsx","index.js"],"names":["UserList","props","useState","selectAll","setSelectAll","setSearchTerm","userPerPage","setUserPerPage","currentPage","setCurrentPage","list","userlist","useEffect","_","slice","take","value","pageCount","Math","ceil","length","pages","range","Container","class","type","placeholder","aria-describedby","onChange","e","target","Table","bordered","hover","size","responsive","Form","Check","aria-label","checked","map","singleUser","key","id","name","email","role","ButtonToolbar","ButtonGroup","className","Button","variant","onClick","userId","updatedListAfterDeletion","filter","user","setUserList","deleteUser","href","aria-hidden","page","pageNumber","startIndex","paginateUser","changePage","App","userList","fetch","then","response","json","users","fluid","Spinner","animation","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fbd92be.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Container from \"react-bootstrap/Container\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { RiDeleteBin2Line } from \"react-icons/ri\";\nimport _ from \"lodash\";\n\nfunction UserList(props) {\n  const [selectAll, setSelectAll] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [userPerPage, setUserPerPage] = useState();\n  const [currentPage, setCurrentPage] = useState(1);\n  const list = props.userlist;\n  const pageSize = 10;\n\n  useEffect(() => {\n    setUserPerPage(_(list).slice(0).take(pageSize).value());\n  }, [list]);\n  // delete User\n  const deleteUser = (userId) => {\n    const updatedListAfterDeletion = list.filter((user) => userId !== user.id);\n    props.setUserList(updatedListAfterDeletion);\n  };\n\n  const pageCount = list ? Math.ceil(list.length / pageSize) : 0;\n  if (pageCount === 1) return null;\n  const pages = _.range(1, pageCount + 1);\n\n  const changePage = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    const startIndex = (pageNumber - 1) * pageSize;\n    const paginateUser = _(list).slice(startIndex).take(pageSize).value();\n    setUserPerPage(paginateUser);\n  };\n\n  return (\n    <div>\n      <Container>\n        <div class=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Search by Name,Email or Role\"\n            aria-describedby=\"basic-addon2\"\n            onChange={(e) => {\n              setSearchTerm(e.target.value);\n            }}\n          />\n          <button type=\"button\" class=\"btn btn-primary\">\n            Search\n          </button>\n        </div>\n\n        <h3>User List</h3>\n        <Table bordered hover size=\"sm\" responsive>\n          <thead>\n            <tr>\n              <th>\n                <Form.Check\n                  aria-label=\"option 1\"\n                  onChange={(e) => {\n                    setSelectAll(e.target.checked);\n                  }}\n                />\n              </th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Role</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {userPerPage &&\n              userPerPage.map((singleUser) => {\n                return (\n                  <tr key={singleUser.id}>\n                    <td>\n                      <Form.Check aria-label=\"option 1\" checked={selectAll} />\n                    </td>\n                    <td>{singleUser.name}</td>\n                    <td>{singleUser.email}</td>\n                    <td>{singleUser.role}</td>\n                    <td>\n                      <ButtonToolbar>\n                        <ButtonGroup className=\"me-2\" aria-label=\"First group\">\n                          <Button variant=\"light\">\n                            <FiEdit />\n                          </Button>\n                        </ButtonGroup>\n                        <ButtonGroup className=\"me-2\" aria-label=\"Second group\">\n                          <Button\n                            variant=\"danger\"\n                            onClick={() => deleteUser(singleUser.id)}\n                          >\n                            <RiDeleteBin2Line className=\"delete\" />\n                          </Button>\n                        </ButtonGroup>\n                      </ButtonToolbar>\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </Table>\n\n        <div>\n          <nav aria-label=\"Page navigation example\">\n            <ul class=\"pagination\">\n              <li class=\"page-item\">\n                <a class=\"page-link\" href=\"##\" aria-label=\"Previous\">\n                  <span aria-hidden=\"true\">&laquo;</span>\n                </a>\n              </li>\n              <li class=\"page-item\">\n                <a class=\"page-link\" href=\"##\">\n                  Previous\n                </a>\n              </li>\n              {pages.map((page) => (\n                <li\n                  class={\n                    page === currentPage ? \"page-item active\" : \"page-item\"\n                  }\n                >\n                  <p class=\"page-link\" onClick={() => changePage(page)}>\n                    {page}\n                  </p>\n                </li>\n              ))}\n              <li class=\"page-item\">\n                <a class=\"page-link\" href=\"##\">\n                  Next\n                </a>\n              </li>\n              <li class=\"page-item\">\n                <a class=\"page-link\" href=\"##\" aria-label=\"Next\">\n                  <span aria-hidden=\"true\">&raquo;</span>\n                </a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default UserList;\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport UserList from \"./components/UserList\";\nimport Container from \"react-bootstrap/Container\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction App() {\n  const [userList, setUserList] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\n      \"https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json\"\n    )\n      .then((response) => response.json())\n      .then((users) => setUserList(users));\n    // return console.log(userList, \"users\");\n  }, []);\n  return (\n    <div>\n      <Container className=\"d-inline-flex justify-content-center\" fluid=\"md\">\n        <h1>ADMIN UI</h1>\n      </Container>\n      {userList ? (\n        <UserList userlist={userList} setUserList={setUserList} />\n      ) : (\n        <>\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </Spinner>\n        </>\n      )}\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}